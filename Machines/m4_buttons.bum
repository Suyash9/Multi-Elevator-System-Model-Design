<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1553775937525" org.eventb.texttools.text_representation="machine m4_buttons refines m3_door sees c3_door&#10;&#10;variables floor cabinShaft motor door upButtons downButtons floorButtons&#10;&#10;invariants&#10;&#9;@inv1: upButtons ⊆ 0 ‥ TOP_FLOOR − 1 // satisfies req 12&#10;&#9;@inv2: downButtons ⊆ 1 ‥ TOP_FLOOR // satisfies req 11&#10;&#9;@inv3: floorButtons ∈ CABIN → ℙ(FLOOR) // satisfies req 13&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;  &#9;then&#10;  &#9;&#9;@act5: upButtons ≔ ∅&#10;  &#9;&#9;@act6: downButtons ≔ ∅&#10;  &#9;&#9;@act7: floorButtons ≔ CABIN × {∅}&#10;  &#9;&#9;// initially, none of the buttons on any floor or any cabins are pressed&#10;  end&#10;&#10;  event UserPressesUpButton&#10;  &#9;any f&#10;  &#9;where&#10;  &#9;&#9;@grd1: f ∈ FLOOR&#10;  &#9;&#9;@grd2: f ≠ TOP_FLOOR // satisfies req 12&#10;  &#9;&#9;@grd3: f ∉ upButtons // button not already pressed&#10;  &#9;&#9;@grd4: (∀c·(c ∈ CABIN ∧ floor(c)=f ∧ cabinShaft(c) = UP)⇒door(c) ≠ OPEN) // don't enable this event if there is already an open-door cabin at that floor in the UP shaft&#10;  &#9;then&#10;  &#9;&#9;@act1: upButtons ≔ upButtons ∪ {f}&#10;  end&#10;&#10;  event UserPressesDownButton&#10;  &#9;any f&#10;  &#9;where&#10;  &#9;&#9;@grd1: f ∈ FLOOR&#10;  &#9;&#9;@grd2: f ≠ 0 // satisfies req 11&#10;  &#9;&#9;@grd3: f ∉ downButtons // button not already pressed&#10;  &#9;&#9;@grd4: (∀c·(c ∈ CABIN ∧ floor(c)=f ∧ cabinShaft(c) = DOWN)⇒door(c) ≠ OPEN) // don't enable this event if there is already an open-door cabin at that floor in the DOWN shaft&#10;  &#9;then&#10;  &#9;&#9;@act1: downButtons ≔ downButtons ∪ {f}&#10;  end&#10;&#10;  event UserPressesFloorButton&#10;  &#9;any c f&#10;  &#9;where&#10;  &#9;&#9;@grd1: c ∈ CABIN&#10;  &#9;&#9;@grd2: f ∈ FLOOR&#10;  &#9;&#9;@grd3: f ∉ floorButtons(c) // button not already pressed&#10;  &#9;&#9;@grd4: (floor(c) = f) ⇒ (door(c) ≠ OPEN) // don't enable this event if the cabin is already open at this floor&#10;  &#9;then&#10;  &#9;&#9;@act1: floorButtons(c) ≔ floorButtons(c) ∪ {f}&#10;  end&#10;&#10;  event DoorHalfToClosed extends DoorHalfToClosed&#10;  &#9;where&#10;  &#9;&#9;@grd4: (cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons // if cabin is in DOWN shaft, its door cannot close if there is a down request at that floor&#10;  &#9;&#9;@grd5: (cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons // same as above guard but for it cabin is in UP shaft&#10;  &#9;&#9;@grd6: floor(c) ∉ floorButtons(c) // don't close door if cabin has request to stop at that floor&#10;  end&#10;&#10;  event DoorOpenToHalf extends DoorOpenToHalf&#10;  &#9;where&#10;  &#9;&#9;@grd4: (cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons&#10;  &#9;&#9;@grd5: (cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons&#10;  &#9;&#9;@grd6: floor(c) ∉ floorButtons(c) // same concept for guards of DoorHalfToClosed&#10;  end&#10;&#10;  event DoorClosedToHalf_UP extends DoorClosedToHalf&#10;  &#9;where&#10;  &#9;&#9;@grd4: cabinShaft(c) = UP&#10;  &#9;&#9;@grd5: floor(c) ∈ (upButtons ∪ floorButtons(c)) // start to open door only if there is a valid request to serve here&#10;  end&#10;&#10;  event DoorClosedToHalf_DOWN extends DoorClosedToHalf&#10;  &#9;where&#10;  &#9;&#9;@grd4: cabinShaft(c) = DOWN&#10;  &#9;&#9;@grd5: floor(c) ∈ downButtons ∪ floorButtons(c) // same concept as guards in DoorClosedToHalf_UP&#10;  end&#10;&#10;  event DoorHalfToOpen_UP extends DoorHalfToOpen&#10;  &#9;where&#10;  &#9;&#9;@grd4: cabinShaft(c) = UP&#10;  &#9;&#9;@grd5: floor(c) ∈ (upButtons ∪ floorButtons(c)) // same concept as above event&#10;  &#9;then&#10;  &#9;&#9;@act2: upButtons ≔ upButtons ∖ {floor(c)}&#10;  &#9;&#9;@act3: floorButtons(c) ≔ floorButtons(c) ∖ {floor(c)} // we only clear requests when the door is fully open&#10;  &#9;end&#10;&#10;  event DoorHalfToOpen_DOWN extends DoorHalfToOpen&#10;  &#9;where&#10;  &#9;&#9;@grd4: cabinShaft(c) = DOWN&#10;  &#9;&#9;@grd5: floor(c) ∈ downButtons ∪ floorButtons(c) // same concept as above&#10;  &#9;then&#10;  &#9;&#9;@act2: downButtons ≔ downButtons ∖ {floor(c)}&#10;  &#9;&#9;@act3: floorButtons(c) ≔ floorButtons(c) ∖ {floor(c)} // we only clear requests when the door is fully open&#10;  end&#10;&#10;  event MotorStarts extends MotorStarts&#10;  &#9;where&#10;  &#9;&#9;@grd8: floor(c) ∉ floorButtons(c) // don't start motor if the cabin has a request at this floor&#10;  &#9;&#9;@grd9: (cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons // don't start motor if cabin is in UP shaft and there is an up request at this floor&#10;  &#9;&#9;@grd10: (cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons // same as above guard but for if cabin is in DOWN shaft&#10;  &#9;&#9;@grd11: (upButtons ∪ downButtons) ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN]∧s≠∅) // there must be some request in the entire system (up, down, or any cabin to a floor request) to justify starting the motor of any cabin. If no requests are present in the system, there is no reason to start any cabin's motor&#10;  &#9;end&#10;&#10;&#10;  event MotorStopsServesRequest extends MotorStops&#10;  &#9;where&#10;  &#9;&#9;@grd3: (cabinShaft(c) = DOWN) ⇒ (floor(c) ∈ downButtons ∨ floor(c) ∈ floorButtons(c))&#10;  &#9;&#9;@grd4: (cabinShaft(c) = UP) ⇒ (floor(c) ∈ upButtons ∨ floor(c) ∈ floorButtons(c)) // whole event for req 14&#10;  &#9;end&#10;&#10;  event MotorStopsOtherCabinRequest extends MotorStops&#10;  &#9;where&#10;  &#9;&#9;@grd3: upButtons ∪ downButtons = ∅  // this event is to allow a cabin to stop if there are still other cabins with requests, but this cabin does not need to move&#10;  &#9;&#9;@grd4: (cabinShaft(c) = UP) ⇒ (∀r·r∈floorButtons[CABIN]⇒(floor(c)‥TOP_FLOOR)∩r=∅)  // if cabin is in UP shaft, no other cabin has a request to go to this cabin's current floor or the one above it&#10;  &#9;&#9;@grd5: (cabinShaft(c) = DOWN) ⇒ (∀r·r∈floorButtons[CABIN]⇒(0‥floor(c))∩r=∅)  // if cabin is in DOWN shaft, no other cabin has a request to go to this cabin's current floor or the one below it&#10;  &#9;end&#10;&#10;  event MotorStopsNoRequest extends MotorStops&#10;  &#9;where&#10;  &#9;&#9;@grd3: FLOOR ∩ (upButtons ∪ downButtons) = ∅&#10;  &#9;&#9;@grd4: ∀s·s∈floorButtons[CABIN]⇒s=∅ // whole event to let a cabin's motor stop if there are no requests anywhere throughout the system&#10;  end&#10;&#10;  event MotorStopsAvoidCollision extends MotorStops&#10;  &#9;where&#10;  &#9;&#9;@grd3: (cabinShaft(c) = UP) ⇒ (∃x·x∈CABIN∧cabinShaft(x)=UP∧floor(x)=floor(c)+1) // if cabin is in UP shaft, this event is enabled if there is another cabin above it&#10;  &#9;&#9;@grd4: (cabinShaft(c) = DOWN) ⇒ (∃x·x∈CABIN∧cabinShaft(x)=DOWN∧floor(x)=floor(c)−1) // if cabin is in DOWN shaft, this event is enabled if there is another cabin below it&#10;  &#9;&#9;// whole event is to allow a cabin to stop its motor if it detects a collision is close to occuring&#10;  &#9;end&#10;&#10;  event MotorStopsChangeShaft extends MotorStops&#10;  &#9;where&#10;  &#9;&#9;@grd3: (cabinShaft(c) = UP) ⇒ floor(c) = TOP_FLOOR // ensure cabin is in TOP_FLOOR if it is in UP shaft&#10;  &#9;&#9;@grd4: (cabinShaft(c) = DOWN) ⇒ floor(c) = 0 // ensure cabin is in 0 if it is in DOWN shaft&#10;  &#9;&#9;@grd5: ((FLOOR ∖ {floor(c)} ) ∩ floorButtons(c) ≠ ∅) ∨ (cabinShaft(c) = UP ⇒ downButtons ≠ ∅) ∨ (cabinShaft(c) = DOWN ⇒ upButtons ≠ ∅) // there must be some existing requests to justify a cabin stopping its motor to change shaft&#10;  &#9;&#9;// whole event is to allow cabin to turn off its motor so that it can change shaft&#10;  &#9;end&#10;&#10;  event CabinUpToDown extends CabinUpToDown&#10;  &#9;where&#10;  &#9;&#9;@grd7: floor(c) ∉ floorButtons(c) // don't allow a cabin to change shaft if there is a request at that floor for that cabin&#10;  &#9;&#9;@grd8: upButtons ∪ downButtons ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN] ∧ s ≠ ∅) // there must be some request in the system (can't be the case where there are no requests at all) to justify allowing a cabin to change shaft&#10;  end&#10;&#10;  event CabinDownToUp extends CabinDownToUp&#10;  &#9;where&#10;  &#9;&#9;@grd7: floor(c) ∉ floorButtons(c)&#10;  &#9;&#9;@grd8: upButtons ∪ downButtons ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN] ∧ s ≠ ∅) // same concept for guards in above event&#10;  end&#10;&#10;  event CabinMovesUp extends CabinMovesUp&#10;  &#9;where&#10;  &#9;&#9;@grd7: floor(c) ∉ floorButtons(c) ∪ upButtons // don't allow a cabin to move up until the requests at the current floor are cleared&#10;  end&#10;&#10;  event CabinMovesDown extends CabinMovesDown&#10;  &#9;where&#10;  &#9;&#9;@grd7: floor(c) ∉ floorButtons(c) ∪ downButtons // same concept as above but for moving down&#10;  end&#10;end&#10;" version="5">
    <org.eventb.core.refinesMachine name="_iGiloElYEemC6s_JJGQJgg" org.eventb.core.target="m3_door"/>
    <org.eventb.core.seesContext name="_iGiloUlYEemC6s_JJGQJgg" org.eventb.core.target="c3_door"/>
    <org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="_iGjMsElYEemC6s_JJGQJgg" org.eventb.core.assignment="upButtons ≔ ∅" org.eventb.core.generated="false" org.eventb.core.label="act5;"/>
        <org.eventb.core.action name="_iGjMsUlYEemC6s_JJGQJgg" org.eventb.core.assignment="downButtons ≔ ∅" org.eventb.core.generated="false" org.eventb.core.label="act6;"/>
        <org.eventb.core.action name="_iGjzwElYEemC6s_JJGQJgg" org.eventb.core.assignment="floorButtons ≔ CABIN × {∅}" org.eventb.core.comment="initially, none of the buttons on any floor or any cabins are pressed" org.eventb.core.generated="false" org.eventb.core.label="act7;"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="_iGjzwUlYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="floor"/>
    <org.eventb.core.variable name="_iGjzwklYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="cabinShaft"/>
    <org.eventb.core.variable name="_iGka0ElYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="motor"/>
    <org.eventb.core.variable name="_iGka0UlYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="door"/>
    <org.eventb.core.variable name="_iGka0klYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="upButtons"/>
    <org.eventb.core.variable name="_iGka00lYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="downButtons"/>
    <org.eventb.core.variable name="_iGka1ElYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="floorButtons"/>
    <org.eventb.core.invariant name="_iGlB4ElYEemC6s_JJGQJgg" org.eventb.core.comment="satisfies req 12" org.eventb.core.generated="false" org.eventb.core.label="inv1;" org.eventb.core.predicate="upButtons ⊆ 0 ‥ TOP_FLOOR − 1"/>
    <org.eventb.core.invariant name="_iGlo8ElYEemC6s_JJGQJgg" org.eventb.core.comment="satisfies req 11" org.eventb.core.generated="false" org.eventb.core.label="inv2;" org.eventb.core.predicate="downButtons ⊆ 1 ‥ TOP_FLOOR"/>
    <org.eventb.core.invariant name="_iGlo8UlYEemC6s_JJGQJgg" org.eventb.core.comment="satisfies req 13" org.eventb.core.generated="false" org.eventb.core.label="inv3;" org.eventb.core.predicate="floorButtons ∈ CABIN → ℙ(FLOOR)"/>
    <org.eventb.core.event name="_iGmQAElYEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="UserPressesUpButton">
        <org.eventb.core.parameter name="_iGm3EElYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="f"/>
        <org.eventb.core.guard name="_iGm3EUlYEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd1;" org.eventb.core.predicate="f ∈ FLOOR"/>
        <org.eventb.core.guard name="_iGm3EklYEemC6s_JJGQJgg" org.eventb.core.comment="satisfies req 12" org.eventb.core.generated="false" org.eventb.core.label="grd2;" org.eventb.core.predicate="f ≠ TOP_FLOOR"/>
        <org.eventb.core.guard name="_iGneIElYEemC6s_JJGQJgg" org.eventb.core.comment="button not already pressed" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="f ∉ upButtons"/>
        <org.eventb.core.action name="_iGneIUlYEemC6s_JJGQJgg" org.eventb.core.assignment="upButtons ≔ upButtons ∪ {f}" org.eventb.core.generated="false" org.eventb.core.label="act1;"/>
        <org.eventb.core.guard name="_udKKwUldEemC6s_JJGQJgg" org.eventb.core.comment="don't enable this event if there is already an open-door cabin at that floor in the UP shaft" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(∀c·(c ∈ CABIN ∧ floor(c)=f ∧ cabinShaft(c) = UP)⇒door(c) ≠ OPEN)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udHugEldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="UserPressesDownButton">
        <org.eventb.core.parameter name="_udIVkEldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="f"/>
        <org.eventb.core.guard name="_udIVkUldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd1;" org.eventb.core.predicate="f ∈ FLOOR"/>
        <org.eventb.core.guard name="_udIVkkldEemC6s_JJGQJgg" org.eventb.core.comment="satisfies req 11" org.eventb.core.generated="false" org.eventb.core.label="grd2;" org.eventb.core.predicate="f ≠ 0"/>
        <org.eventb.core.guard name="_udIVk0ldEemC6s_JJGQJgg" org.eventb.core.comment="button not already pressed" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="f ∉ downButtons"/>
        <org.eventb.core.action name="_udI8oEldEemC6s_JJGQJgg" org.eventb.core.assignment="downButtons ≔ downButtons ∪ {f}" org.eventb.core.generated="false" org.eventb.core.label="act1;"/>
        <org.eventb.core.guard name="_udKx0UldEemC6s_JJGQJgg" org.eventb.core.comment="don't enable this event if there is already an open-door cabin at that floor in the DOWN shaft" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(∀c·(c ∈ CABIN ∧ floor(c)=f ∧ cabinShaft(c) = DOWN)⇒door(c) ≠ OPEN)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udI8oUldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="UserPressesFloorButton">
        <org.eventb.core.parameter name="_udI8okldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="c"/>
        <org.eventb.core.parameter name="_udI8o0ldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.identifier="f"/>
        <org.eventb.core.guard name="_udJjsEldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd1;" org.eventb.core.predicate="c ∈ CABIN"/>
        <org.eventb.core.guard name="_udJjsUldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd2;" org.eventb.core.predicate="f ∈ FLOOR"/>
        <org.eventb.core.guard name="_udJjskldEemC6s_JJGQJgg" org.eventb.core.comment="button not already pressed" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="f ∉ floorButtons(c)"/>
        <org.eventb.core.action name="_udJjs0ldEemC6s_JJGQJgg" org.eventb.core.assignment="floorButtons(c) ≔ floorButtons(c) ∪ {f}" org.eventb.core.generated="false" org.eventb.core.label="act1;"/>
        <org.eventb.core.guard name="_udLY4kldEemC6s_JJGQJgg" org.eventb.core.comment="don't enable this event if the cabin is already open at this floor" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(floor(c) = f) ⇒ (door(c) ≠ OPEN)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udJjtEldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorHalfToClosed">
        <org.eventb.core.refinesEvent name="_udKKwEldEemC6s_JJGQJgg" org.eventb.core.target="DoorHalfToClosed"/>
        <org.eventb.core.guard name="_udL_80ldEemC6s_JJGQJgg" org.eventb.core.comment="if cabin is in DOWN shaft, its door cannot close if there is a down request at that floor" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons"/>
        <org.eventb.core.guard name="_udKKwkldEemC6s_JJGQJgg" org.eventb.core.comment="same as above guard but for it cabin is in UP shaft" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons"/>
        <org.eventb.core.guard name="_udKKw0ldEemC6s_JJGQJgg" org.eventb.core.comment="don't close door if cabin has request to stop at that floor" org.eventb.core.generated="false" org.eventb.core.label="grd6;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udKKxEldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorOpenToHalf">
        <org.eventb.core.refinesEvent name="_udKx0EldEemC6s_JJGQJgg" org.eventb.core.target="DoorOpenToHalf"/>
        <org.eventb.core.guard name="_udNOEUldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons"/>
        <org.eventb.core.guard name="_udKx0kldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons"/>
        <org.eventb.core.guard name="_5jhvUElqEem7jJ-Tqpd-5A" org.eventb.core.comment="same concept for guards of DoorHalfToClosed" org.eventb.core.generated="false" org.eventb.core.label="grd6;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udLY4EldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorClosedToHalf_UP">
        <org.eventb.core.refinesEvent name="_udLY4UldEemC6s_JJGQJgg" org.eventb.core.target="DoorClosedToHalf"/>
        <org.eventb.core.guard name="_udN1IUldEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="cabinShaft(c) = UP"/>
        <org.eventb.core.guard name="_udLY40ldEemC6s_JJGQJgg" org.eventb.core.comment="start to open door only if there is a valid request to serve here" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="floor(c) ∈ (upButtons ∪ floorButtons(c))"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udL_8UldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorClosedToHalf_DOWN">
        <org.eventb.core.refinesEvent name="_udL_8kldEemC6s_JJGQJgg" org.eventb.core.target="DoorClosedToHalf"/>
        <org.eventb.core.guard name="_5jlZsElqEem7jJ-Tqpd-5A" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="cabinShaft(c) = DOWN"/>
        <org.eventb.core.guard name="_5ji9cElqEem7jJ-Tqpd-5A" org.eventb.core.comment="same concept as guards in DoorClosedToHalf_UP" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="floor(c) ∈ downButtons ∪ floorButtons(c)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udMnA0ldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorHalfToOpen_UP">
        <org.eventb.core.refinesEvent name="_udNOEEldEemC6s_JJGQJgg" org.eventb.core.target="DoorHalfToOpen"/>
        <org.eventb.core.guard name="_i-8nwEltEemJvZn9R5oBVQ" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="cabinShaft(c) = UP"/>
        <org.eventb.core.guard name="_8GmAoUl4EembM5YOwXl8eQ" org.eventb.core.comment="same concept as above event" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="floor(c) ∈ (upButtons ∪ floorButtons(c))"/>
        <org.eventb.core.action name="_udLY5EldEemC6s_JJGQJgg" org.eventb.core.assignment="upButtons ≔ upButtons ∖ {floor(c)}" org.eventb.core.generated="false" org.eventb.core.label="act2;"/>
        <org.eventb.core.action name="_udL_8EldEemC6s_JJGQJgg" org.eventb.core.assignment="floorButtons(c) ≔ floorButtons(c) ∖ {floor(c)}" org.eventb.core.comment="we only clear requests when the door is fully open" org.eventb.core.generated="false" org.eventb.core.label="act3;"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_udNOFEldEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="DoorHalfToOpen_DOWN">
        <org.eventb.core.refinesEvent name="_udN1IEldEemC6s_JJGQJgg" org.eventb.core.target="DoorHalfToOpen"/>
        <org.eventb.core.guard name="_751o8El2EembM5YOwXl8eQ" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="cabinShaft(c) = DOWN"/>
        <org.eventb.core.guard name="_3kQ9kEl7EembM5YOwXl8eQ" org.eventb.core.comment="same concept as above" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="floor(c) ∈ downButtons ∪ floorButtons(c)"/>
        <org.eventb.core.action name="_udMnAUldEemC6s_JJGQJgg" org.eventb.core.assignment="downButtons ≔ downButtons ∖ {floor(c)}" org.eventb.core.generated="false" org.eventb.core.label="act2;"/>
        <org.eventb.core.action name="_5c5VAE1eEemUOty6eQAtXw" org.eventb.core.assignment="floorButtons(c) ≔ floorButtons(c) ∖ {floor(c)}" org.eventb.core.comment="we only clear requests when the door is fully open" org.eventb.core.generated="false" org.eventb.core.label="act3;"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOA7wElkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStarts">
        <org.eventb.core.refinesEvent name="_vOA7wUlkEemC6s_JJGQJgg" org.eventb.core.target="MotorStarts"/>
        <org.eventb.core.guard name="_vOA7wklkEemC6s_JJGQJgg" org.eventb.core.comment="don't start motor if the cabin has a request at this floor" org.eventb.core.generated="false" org.eventb.core.label="grd8;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c)"/>
        <org.eventb.core.guard name="_vOA7w0lkEemC6s_JJGQJgg" org.eventb.core.comment="don't start motor if cabin is in UP shaft and there is an up request at this floor" org.eventb.core.generated="false" org.eventb.core.label="grd9;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ floor(c) ∉ upButtons"/>
        <org.eventb.core.guard name="_vOA7xElkEemC6s_JJGQJgg" org.eventb.core.comment="same as above guard but for if cabin is in DOWN shaft" org.eventb.core.generated="false" org.eventb.core.label="grd10;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ floor(c) ∉ downButtons"/>
        <org.eventb.core.guard name="_vOBi0ElkEemC6s_JJGQJgg" org.eventb.core.comment="there must be some request in the entire system (up, down, or any cabin to a floor request) to justify starting the motor of any cabin. If no requests are present in the system, there is no reason to start any cabin's motor" org.eventb.core.generated="false" org.eventb.core.label="grd11;" org.eventb.core.predicate="(upButtons ∪ downButtons) ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN]∧s≠∅)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOBi0UlkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStopsServesRequest">
        <org.eventb.core.refinesEvent name="_vOBi0klkEemC6s_JJGQJgg" org.eventb.core.target="MotorStops"/>
        <org.eventb.core.guard name="_vOBi00lkEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ (floor(c) ∈ downButtons ∨ floor(c) ∈ floorButtons(c))"/>
        <org.eventb.core.guard name="_754sQEl2EembM5YOwXl8eQ" org.eventb.core.comment="whole event for req 14" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ (floor(c) ∈ upButtons ∨ floor(c) ∈ floorButtons(c))"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_G5WHkEo0EemTbbzHekqj2Q" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStopsOtherCabinRequest">
        <org.eventb.core.refinesEvent name="_G5WuoEo0EemTbbzHekqj2Q" org.eventb.core.target="MotorStops"/>
        <org.eventb.core.guard name="_vOCJ4UlkEemC6s_JJGQJgg" org.eventb.core.comment="this event is to allow a cabin to stop if there are still other cabins with requests, but this cabin does not need to move" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="upButtons ∪ downButtons = ∅"/>
        <org.eventb.core.guard name="_8GmAoEl4EembM5YOwXl8eQ" org.eventb.core.comment="if cabin is in UP shaft, no other cabin has a request to go to this cabin's current floor or the one above it" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ (∀r·r∈floorButtons[CABIN]⇒(floor(c)‥TOP_FLOOR)∩r=∅)"/>
        <org.eventb.core.guard name="_3kSywEl7EembM5YOwXl8eQ" org.eventb.core.comment="if cabin is in DOWN shaft, no other cabin has a request to go to this cabin's current floor or the one below it" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ (∀r·r∈floorButtons[CABIN]⇒(0‥floor(c))∩r=∅)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOBi1UlkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStopsNoRequest">
        <org.eventb.core.refinesEvent name="_vOCJ4ElkEemC6s_JJGQJgg" org.eventb.core.target="MotorStops"/>
        <org.eventb.core.guard name="_8GlZkkl4EembM5YOwXl8eQ" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="FLOOR ∩ (upButtons ∪ downButtons) = ∅"/>
        <org.eventb.core.guard name="_G5XVsUo0EemTbbzHekqj2Q" org.eventb.core.comment="whole event to let a cabin's motor stop if there are no requests anywhere throughout the system" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="∀s·s∈floorButtons[CABIN]⇒s=∅"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_C1jh4Eu8EemkcMhPsaVwyA" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStopsAvoidCollision">
        <org.eventb.core.refinesEvent name="_C1kI8Eu8EemkcMhPsaVwyA" org.eventb.core.target="MotorStops"/>
        <org.eventb.core.guard name="_G5XVsEo0EemTbbzHekqj2Q" org.eventb.core.comment="if cabin is in UP shaft, this event is enabled if there is another cabin above it" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ (∃x·x∈CABIN∧cabinShaft(x)=UP∧floor(x)=floor(c)+1)"/>
        <org.eventb.core.guard name="_C1lXEEu8EemkcMhPsaVwyA" org.eventb.core.comment="if cabin is in DOWN shaft, this event is enabled if there is another cabin below it&#10;whole event is to allow a cabin to stop its motor if it detects a collision is close to occuring" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ (∃x·x∈CABIN∧cabinShaft(x)=DOWN∧floor(x)=floor(c)−1)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_8GlZkEl4EembM5YOwXl8eQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="MotorStopsChangeShaft">
        <org.eventb.core.refinesEvent name="_8GlZkUl4EembM5YOwXl8eQ" org.eventb.core.target="MotorStops"/>
        <org.eventb.core.guard name="_C1kwAEu8EemkcMhPsaVwyA" org.eventb.core.comment="ensure cabin is in TOP_FLOOR if it is in UP shaft" org.eventb.core.generated="false" org.eventb.core.label="grd3;" org.eventb.core.predicate="(cabinShaft(c) = UP) ⇒ floor(c) = TOP_FLOOR"/>
        <org.eventb.core.guard name="_4p1LEE-oEemqb63wQetowQ" org.eventb.core.comment="ensure cabin is in 0 if it is in DOWN shaft" org.eventb.core.generated="false" org.eventb.core.label="grd4;" org.eventb.core.predicate="(cabinShaft(c) = DOWN) ⇒ floor(c) = 0"/>
        <org.eventb.core.guard name="_G5X8wEo0EemTbbzHekqj2Q" org.eventb.core.comment="there must be some existing requests to justify a cabin stopping its motor to change shaft&#10;whole event is to allow cabin to turn off its motor so that it can change shaft" org.eventb.core.generated="false" org.eventb.core.label="grd5;" org.eventb.core.predicate="((FLOOR ∖ {floor(c)} ) ∩ floorButtons(c) ≠ ∅) ∨ (cabinShaft(c) = UP ⇒ downButtons ≠ ∅) ∨ (cabinShaft(c) = DOWN ⇒ upButtons ≠ ∅)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOCJ4klkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="CabinUpToDown">
        <org.eventb.core.refinesEvent name="_vOCJ40lkEemC6s_JJGQJgg" org.eventb.core.target="CabinUpToDown"/>
        <org.eventb.core.guard name="_vOCJ5ElkEemC6s_JJGQJgg" org.eventb.core.comment="don't allow a cabin to change shaft if there is a request at that floor for that cabin" org.eventb.core.generated="false" org.eventb.core.label="grd7;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c)"/>
        <org.eventb.core.guard name="_vOCw8ElkEemC6s_JJGQJgg" org.eventb.core.comment="there must be some request in the system (can't be the case where there are no requests at all) to justify allowing a cabin to change shaft" org.eventb.core.generated="false" org.eventb.core.label="grd8;" org.eventb.core.predicate="upButtons ∪ downButtons ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN] ∧ s ≠ ∅)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOCw8UlkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="CabinDownToUp">
        <org.eventb.core.refinesEvent name="_vOCw8klkEemC6s_JJGQJgg" org.eventb.core.target="CabinDownToUp"/>
        <org.eventb.core.guard name="_vODYAElkEemC6s_JJGQJgg" org.eventb.core.generated="false" org.eventb.core.label="grd7;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c)"/>
        <org.eventb.core.guard name="_vODYAUlkEemC6s_JJGQJgg" org.eventb.core.comment="same concept for guards in above event" org.eventb.core.generated="false" org.eventb.core.label="grd8;" org.eventb.core.predicate="upButtons ∪ downButtons ≠ ∅ ∨ (∃s·s∈floorButtons[CABIN] ∧ s ≠ ∅)"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vODYAklkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="CabinMovesUp">
        <org.eventb.core.refinesEvent name="_vODYA0lkEemC6s_JJGQJgg" org.eventb.core.target="CabinMovesUp"/>
        <org.eventb.core.guard name="__5fj8Eu8EemkcMhPsaVwyA" org.eventb.core.comment="don't allow a cabin to move up until the requests at the current floor are cleared" org.eventb.core.generated="false" org.eventb.core.label="grd7;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c) ∪ upButtons"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_vOD_EElkEemC6s_JJGQJgg" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.generated="false" org.eventb.core.label="CabinMovesDown">
        <org.eventb.core.refinesEvent name="_vOD_EUlkEemC6s_JJGQJgg" org.eventb.core.target="CabinMovesDown"/>
        <org.eventb.core.guard name="__5fj8Uu8EemkcMhPsaVwyA" org.eventb.core.comment="same concept as above but for moving down" org.eventb.core.generated="false" org.eventb.core.label="grd7;" org.eventb.core.predicate="floor(c) ∉ floorButtons(c) ∪ downButtons"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
